import os
import csv
import json
import comm

from openpyxl import load_workbook

# this file should not import comm2, as comm2 is generated by using this file
def header_mapping_helper(header,row,filename,dest_folder):

    data = dict(zip(header, row))
    with open(os.path.join(dest_folder,filename),'w') as f:
        json.dump(data,f,indent=2)
#header_mapping_helper(['xx','yy'],['mm','test is'],'abc')

def base_filename(path):
    return os.path.basename(path).rsplit('.')[0]

#
# for file in os.listdir(comm.folder4mysqlcleaned):
#     if file.endswith('csv'):
#         header_mapping_helper(comm.folder4mysqlcleaned,file)




    #print(query)

#print(table_name_dict.get(base_filename(os.listdir('data_type')[0])))


data_type_folder = 'data_type'
def enum_definition_generate(class_name, body):
    return f'class {class_name}(Enum):\n    {body}'
def clean_file_name_for_enum(fname):
    return fname.replace(' ', '_').replace('.csv', '')

def create_enum(*body):
    with open('comm2.py', 'w') as f:
        f.write('from enum import Enum\n')
        for b in body:
            f.write(b)
            f.write('\n\n')

def create_comm2_py_enum():
    enum_class_4_files = 'CSVFiles'
    csv_enum_members = '\n    '.join(
        [f"{clean_file_name_for_enum(file)} = '{file}'" for file in os.listdir(comm.folder4mysql) if
         file.endswith('csv')])
    file_enum_definition = enum_definition_generate(enum_class_4_files, csv_enum_members)

    enum_class_4_files_no_csv_suffix = 'NoCSVFiles'
    no_csv_enum_members = '\n    '.join(
        [ f"{clean_file_name_for_enum(file)} = '{base_filename(file)}'"
          for file in os.listdir(comm.folder4mysql) if file.endswith('csv')]
    )
    no_csv_enum_definition = enum_definition_generate(enum_class_4_files_no_csv_suffix, no_csv_enum_members)

    return file_enum_definition, no_csv_enum_definition


def create_comm2_py_excel_sheets():
    excel_filename = os.path.join(comm.folder,comm.template_file)

    workbook = load_workbook(excel_filename)

# Get the names of all sheets, filter for visible sheets only
    visible_sheet_names = [sheet.title for sheet in workbook.worksheets if sheet.sheet_state == 'visible']
    sheet_enum_definition = '\n    '.join( [f"{sheet} = '{sheet}'" for sheet in visible_sheet_names])
    enum_class_4_excel_sheets = 'Sheets'
    return enum_definition_generate(enum_class_4_excel_sheets, sheet_enum_definition)


def create_enum_4_comm2():
    enum12, enum3 = create_comm2_py_enum(), create_comm2_py_excel_sheets()
    create_enum(*enum12, enum3)



#create_enum_files_definition()
#

#csvfiles_insert_definition(comm.folder4mysqlcleaned)
#insert_into_table('clients', ['name','gender'], [["xx","33"],["tim",'m']],'aa')